server:
  port: 8040
spring:
  data:
    mongodb:
      username: pKanak
      password: pKanak
      host: ${application.config.hostname}
      port: 27017
      database: notification
      authentication-database: admin
  kafka:
    bootstrap-servers: dockervm:9092
    consumer:
      bootstrap-servers: dockervm:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: orderConfirmation:com.pk.ecommerce.kafka.OrderConfirmation,paymentConfirmation:com.pk.ecommerce.kafka.PaymentConfirmation
  mail:
    host: ${application.config.hostname}
    port: 1025
    username: pKanak
    password: pKanak
    properties:
      mail:
        smpt:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
application:
  config:
    contact-email: dronvideos777@gmail.com
    kafka:
      payment-topic: payment-topic
      order-topic: order-topic
logging:
  config: classpath:logback-spring.xml
  level:
    root: INFO # TRACE DEBUG INFO WARN ERROR
    com:
      pk: INFO